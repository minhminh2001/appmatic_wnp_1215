apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

//buildscript {
//    repositories {
//        jcenter()
//        mavenCentral()
//        maven { url 'https://maven.fabric.io/public' }
//    }
//    dependencies {
//        classpath 'io.fabric.tools:gradle:1.+'
//    }
//}
//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '.readme'
    }

    dexOptions {
        preDexLibraries = false
    }
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
    }

    productFlavors {
        wnp {
            resValue("string", "app_name", "wnp")
            manifestPlaceholders = [fabricApiKey: "be4d520aa12beeb3e6e381b16ef4ea98bbd5e7d8", app_icon: "@mipmap/icon_v1"]
            buildConfigField('String', 'REQUEST_URL', '"http://192.168.1.233/"')
            buildConfigField('String', 'HASH_KEY', '"123456"')
            buildConfigField('String', 'GA_TRACK_ID', '"UA-72586399-2"')
            buildConfigField('String', 'FACEBOOK_ID', '"1287318627981888"')
            buildConfigField('String', 'MOCK_URL', '"http://192.168.1.233:8088/"')
            buildConfigField('String', 'API_VERSION', '"v1"')
            buildConfigField('String', 'API_KEY', '"L5M7aUpZRr2ChzDx"')
        }
        evisu {
            resValue("string", "app_name", "evisu")
            manifestPlaceholders = [fabricApiKey: "be4d520aa12beeb3e6e381b16ef4ea98bbd5e7d8", app_icon: "@mipmap/icon_v1"]
            buildConfigField('String', "REQUEST_URL", '"https://api.gemfive.com/"')
            buildConfigField('String', 'HASH_KEY', '"123456"')
            buildConfigField('String', 'GA_TRACK_ID', '"UA-72586399-2"')
            buildConfigField('String', 'FACEBOOK_ID', '"1287318627981888"')
            buildConfigField('String', 'MOCK_URL', '"http://192.168.1.233:8088/"')
            buildConfigField('String', 'API_VERSION', '"v1"')
            buildConfigField('String', 'API_KEY', '"L5M7aUpZRr2ChzDx"')
        }
//        uat{
//            manifestPlaceholders = [ fabricApiKey: "be4d520aa12beeb3e6e381b16ef4ea98bbd5e7d8" ]
//            buildConfigField('String',"REQUEST_URL",'"https://uat.gemfive.com/my/"')
//            buildConfigField('String','HASH_KEY','"123456"')
//            buildConfigField('String','GA_TRACK_ID','"UA-72586399-2"')
//            buildConfigField('String','FACEBOOK_ID','"1287318627981888"')
//        }
//        staging{
//            manifestPlaceholders = [ fabricApiKey: "be4d520aa12beeb3e6e381b16ef4ea98bbd5e7d8" ]
//            buildConfigField('String',"REQUEST_URL",'"https://staging.gemfive.com/my/"')
//            buildConfigField('String','HASH_KEY','"123456"')
//            buildConfigField('String','GA_TRACK_ID','"UA-72586399-2"')
//            buildConfigField('String','FACEBOOK_ID','"1287318627981888"')
//        }
//        livedebug{
//            manifestPlaceholders = [ fabricApiKey: "60c1a182ffa45626fcc599067b045cc2cde1d482" ]
//            buildConfigField('String',"REQUEST_URL",'"https://www.gemfive.com/my/"')
//            buildConfigField('String','HASH_KEY','"123456"')
//            buildConfigField('String','GA_TRACK_ID','"UA-72586399-2"')
//            buildConfigField('String','FACEBOOK_ID','"1287318627981888"')
//        }
//        liverelease{
//            manifestPlaceholders = [ fabricApiKey: "60c1a182ffa45626fcc599067b045cc2cde1d482" ]
//            buildConfigField('String',"REQUEST_URL",'"https://www.gemfive.com/my/"')
//            buildConfigField('String','HASH_KEY','"5d89We"')
//            buildConfigField('String','GA_TRACK_ID','"UA-62438602-3"')
//            buildConfigField('String','FACEBOOK_ID','"1287318627981888"')
//        }
    }

    signingConfigs {
        sign
    }

    buildTypes {
        release {
            signingConfig signingConfigs.sign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main { jniLibs.srcDirs = ['libs'] }
    }
    lintOptions {
        abortOnError false
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.dependencies["httpcore"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["design"]
//    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["okhttp-urlconnection"]
    compile rootProject.ext.dependencies["okhttp-okio"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-okhttp"]
    compile rootProject.ext.dependencies["play-service-gcm"]
    compile rootProject.ext.dependencies["play-service-analytics"]
    compile rootProject.ext.dependencies["facebook"]
    compile rootProject.ext.dependencies["play_service_auth"]
    compile rootProject.ext.dependencies["molpay-xdk"]
    compile rootProject.ext.dependencies["firebase_code"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["zxing"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-gson"]
    compile rootProject.ext.dependencies["retrofit-rxjava"]
    compile rootProject.ext.dependencies["retrofit-logging"]
    //    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
//        transitive = true;
//    }
    //    debugCompile rootProject.ext.dependencies["leak_canary_bug"]
//    releaseCompile  rootProject.ext.dependencies["leak_canary_release"]
//    testCompile rootProject.ext.dependencies["leak_canary_test"]


    compile 'com.android.support:multidex:1.0.0'
    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.paypal.sdk:paypal-android-sdk:2.15.3'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
        dx.additionalParameters += '--minimal-main-dex'
    }
}

//println "config code: ${calculateVersionCode()}, name: ${calculateVersionName()}"

def ksFile = rootProject.file('keystore.properties')
def props = new Properties();
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))

    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}

