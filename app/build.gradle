apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

//buildscript {
//    repositories {
//        jcenter()
//        mavenCentral()
//        maven { url 'https://maven.fabric.io/public' }
//    }
//    dependencies {
//        classpath 'io.fabric.tools:gradle:1.+'
//    }
//}
//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '.readme'
    }

    dexOptions {
        preDexLibraries = false
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        applicationId rootProject.ext.android.applicationId
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
    }

    productFlavors {
        wnp {
        }
        whitelabel{
        }
        evisu {
        }
    }

    signingConfigs {
        sign
    }
    buildTypes {
        release {
            signingConfig signingConfigs.sign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main { jniLibs.srcDirs = ['libs'] }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"

    }
}

ext{
    SUPPORT_LIB_VERSION = '24.1.0'
    BUTTERKNIFE_VERSION='8.4.0'
    PLAY_SERVICE_VERSION='9.4.0'
    RETROFIT2_VERSION='2.1.0'
    PERMISSION_VERSION='2.3.1'

}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.apache.httpcomponents:httpcore:4.4.4"
    compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
    compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    compile "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    compile "com.squareup.retrofit2:retrofit:${RETROFIT2_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT2_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava:${RETROFIT2_VERSION}"
    compile "com.github.hotchemi:permissionsdispatcher:${PERMISSION_VERSION}"
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:${PERMISSION_VERSION}"
    compile "com.google.android.gms:play-services-gcm:${PLAY_SERVICE_VERSION}"
    compile "com.google.android.gms:play-services-analytics:${PLAY_SERVICE_VERSION}"
    compile "com.google.android.gms:play-services-auth:${PLAY_SERVICE_VERSION}"
    compile "com.google.firebase:firebase-core:${PLAY_SERVICE_VERSION}"
//    compile rootProject.ext.dependencies["gson"]
    compile "com.squareup.okhttp3:okhttp-urlconnection:3.5.0"
    compile "com.squareup.okio:okio:1.11.0"
    compile "com.github.bumptech.glide:glide:3.7.0"
    compile "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar"
    compile "com.facebook.android:facebook-android-sdk:4.17.0"
    compile "com.molpay:molpay-mobile-xdk-android:3.3.0"
    compile "io.reactivex:rxjava:1.1.6"
    compile "io.reactivex:rxandroid:1.2.1"
    compile "com.journeyapps:zxing-android-embedded:3.4.0"
    compile "com.squareup.okhttp3:logging-interceptor:3.5.0"
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.paypal.sdk:paypal-android-sdk:2.15.3'
}
//    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
//        transitive = true;
//    }
//    debugCompile rootProject.ext.dependencies["leak_canary_bug"]
//    releaseCompile  rootProject.ext.dependencies["leak_canary_release"]
//    testCompile rootProject.ext.dependencies["leak_canary_test"]


afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
        dx.additionalParameters += '--minimal-main-dex'
    }
}

//println "config code: ${calculateVersionCode()}, name: ${calculateVersionName()}"

def ksFile = rootProject.file('keystore.properties')
def props = new Properties();
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))
    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}

